name: build

on: [push, pull_request]

jobs:
  ubuntu64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: apt-install
      run: sudo apt-get install -qq -y --no-install-recommends gcc g++ zlib1g-dev libdwarf-dev libprocps-dev qtbase5-dev qtdeclarative5-dev python3 ninja-build cmake
    - name: cmake
      run: cmake -H$PWD -B$PWD/build -G Ninja -DENABLE_GUI=1
    - name: build
      run: cmake --build $PWD/build --use-stderr
    - name: check
      run: cmake --build $PWD/build --use-stderr --target check
    - name: package
      run: cmake --build $PWD/build --use-stderr --target package

  ubuntu32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: apt-install
      run: sudo apt-get install -qq -y --no-install-recommends linux-libc-dev gcc-multilib gcc-multilib g++-multilib python3 ninja-build cmake
    - name: cmake
      run: cmake -H$PWD -B$PWD/build -G Ninja -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32 -DCMAKE_SYSTEM_LIBRARY_PATH=/usr/lib32 -DENABLE_GUI=0
    - name: build
      run: cmake --build $PWD/build --use-stderr
    - name: check
      run: cmake --build $PWD/build --use-stderr --target check

  ubuntu64-clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: apt-install
      run: sudo apt-get install -qq -y --no-install-recommends clang libc++-dev libc++abi-dev zlib1g-dev libdwarf-dev libprocps-dev qtbase5-dev qtdeclarative5-dev python3 ninja-build cmake
    - name: cmake
      run: cmake -H$PWD -B$PWD/build -G Ninja -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DENABLE_GUI=1
    - name: build
      run: cmake --build $PWD/build --use-stderr
    - name: check
      run: cmake --build $PWD/build --use-stderr --target check
    - name: package
      run: cmake --build $PWD/build --use-stderr --target package

  ubuntu-16.04:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: apt-install
      run: ci/build-ubuntu-16.04.sh

  mingw32:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: apt-install
      run: sudo apt-get install -qq -y --no-install-recommends g++-mingw-w64-i686 ninja-build cmake
    - name: dxsdk
      run: wget -q -O - https://github.com/apitrace/dxsdk/archive/master.tar.gz | tar -xz
    - name: build
      run: .github/scripts/build-mingw.sh
      env:
        MINGW_PREFIX: i686-w64-mingw32

  msvc:
    runs-on: windows-latest
    strategy:
      matrix:
        target: ["win32", "win64"]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Build
      run: .\ci\build-msvc.ps1 -target ${{ matrix.target }}

  mac64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: qt5
      run: brew install qt5
    - name: cmake
      run: cmake -H$PWD -B$PWD/build -DCMAKE_PREFIX_PATH=$(brew --prefix qt5) -DENABLE_GUI=ON
    - name: build
      run: cmake --build $PWD/build --use-stderr
    - name: check
      run: cmake --build $PWD/build --use-stderr --target check
